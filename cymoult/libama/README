/***********************************
* 	       COMPILE	 	   *
***********************************/

1. Get libuminati project compiled.
2. Set LD_LIBRARY_PATH to have access to .so file (libuminati/bin (or libuminati/lib/bin)).
In addition, you need to be sure to have access to elfutils files (mine has been installed in /usr/local/lib).
3. make.


/***********************************
*   	  FIRST TRIES   		   *
***********************************/

NOT UPDATED : Use lamanager equivalent instead (same numbering).

A] First Manager

1. In a first terminal, launch "./testprogs/prog" (no arg needed). It can be launched from any repository.
2.a. In a second terminal, use "pgrep prog" to find the pid of the program.
2.b. Change ptrace permissions : "echo 0 > /proc/sys/kernel/yama/ptrace_scope" (might need to be done as root)
2.c. Launch manager ("./manager pid").
3.a. In a third terminal, use "pgrep manager" to find the pid of the manager.
3.b. Use "kill -SIGUSR1 managerpid" to start the update.

Notes:
This manager is started manually.
Update is started manually.

B] Second Manager

1. In a terminal, launch "manager2 ./testprogs/prog" (no arg needed).

Notes:
This manager launches the program and have access directly to all information.
It is checking for updates every 5 seconds.


General Notes:
On update, managers are checking if there are files in the dynamic_updates folder which has to be present in the program exection folder.
Current update is done without using external update files : update is already present in prog (it is not using the test.o file which is empty).
prog file is taken from libuminati project.
You have to create new update files in the dynamic_updates folder because update files are removed after use.

/***********************************
*	       LIBAMA		   *
***********************************/

1) make libama
2) ./libtest pid (again you can take "prog" as an example)
This is just a test file of the lib.
3) lamanager works as manager (cf previous part A])
4) lamanager2 works as manager2 (cv previous part B])
